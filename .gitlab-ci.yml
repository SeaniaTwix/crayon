cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - ./node_modules/
    - ./src/kit/node_modules/
    - ./src/animate/node_modules/
    - ./src/preact/node_modules/
    - ./src/react/node_modules/
    - ./src/router/node_modules/
    - ./src/svelte/node_modules/
    - ./src/transition/node_modules/
    - ./src/vue/node_modules/
    - ./src/kit/dist/
    - ./src/animate/dist/
    - ./src/preact/dist/
    - ./src/react/dist/
    - ./src/router/dist/
    - ./src/svelte/dist/
    - ./src/transition/dist/
    - ./src/vue/dist/

stages:
  - install
  - build
  - test
  - publish
  - docs

#
# All
#
(Install) All:
  image: node:lts
  stage: install
  script:
    - npm install -g concurrently
    - make clean
    - make install

(Build) All:
  image: node:lts
  stage: build
  script:
    - npm install -g concurrently
    - make build-prod

#
# router
#
(Test) router:
  image: node:lts
  stage: test
  script:
    - cd ./src/router && yarn test:cover

(Publish) router:
  image: node:lts
  stage: publish
  artifacts:
    paths:
      - badges/**
  only:
  - master
  script:
    - sh deploy.sh ./src/router
    - cd src/router
    - mkdir -p badges
    - export VERSION=$(node -e "console.log(require('./package.json').version)")
    - wget -O badges/version.svg https://img.shields.io/badge/version-${VERSION}-blue.svg
    - wget -O badges/size.svg https://img.shields.io/badge/size-6kb-green.svg
    - cd ../../
    - cp -r src/router/badges .

(Generate) Docs:
  image: alshdavid/aws-cli
  stage: docs
  only:
    - master
  script:
    - sh <(curl -sSL https://alshdavid.github.io/alshx/bin/alshx) --install
    - aws s3 rm --recursive s3://alshdavid-public/crayon/badges
    - aws s3 cp --recursive ./badges s3://alshdavid-public/crayon/badges
    - aws cloudfront create-invalidation --distribution-id E2QHY39OWRUCEU --paths /\*
    - alshx hub-purge https://github.com/alshdavid/crayon

#
# Animate
#
(Test) kit:
  image: node:lts
  stage: test
  script:
    - cd ./src/kit && yarn test:cover

#
# Animate
#
(Test) animate:
  image: node:lts
  stage: test
  script:
    - cd ./src/animate && yarn test:cover

(Publish) animate:
  image: node:lts
  stage: publish
  only:
  - master
  script:
    - sh deploy.sh ./src/animate

#
# Transition
#
(Test) transition:
  image: node:lts
  stage: test
  script:
    - cd ./src/transition && yarn test:cover

(Publish) transition:
  image: node:lts
  stage: publish
  only:
  - master
  script:
    - sh deploy.sh ./src/transition

#
# React
#
(Test) react:
  image: node:lts
  stage: test
  script:
    - cd ./src/react && yarn test:cover

(Publish) react:
  image: node:lts
  stage: publish
  only:
  - master
  script:
    - sh deploy.sh ./src/react

#
# Preact
#
(Test) preact:
  image: node:lts
  stage: test
  script:
    - cd ./src/preact && yarn test:cover

(Publish) preact:
  image: node:lts
  stage: publish
  only:
  - master
  script:
    - sh deploy.sh ./src/preact

#
# Svelte
#
(Test) svelte:
  image: node:lts
  stage: test
  script:
    - cd ./src/svelte && yarn test:cover

(Publish) svelte:
  image: node:lts
  stage: publish
  only:
  - master
  script:
    - sh deploy.sh ./src/svelte

#
# Vue
#
(Test) vue:
  image: node:lts
  stage: test
  script:
    - cd ./src/vue && yarn test:cover

(Publish) vue:
  image: node:lts
  stage: publish
  only:
  - master
  script:
    - sh deploy.sh ./src/vue
