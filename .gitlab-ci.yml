stages:
  - install
  - publish
#   - gendocs

install_dependencies:
  image: node:lts
  stage: install
  only:
    - master
  artifacts:
    paths:
      - node_modules/**
  script:
    - make

# router:
#   image: node:lts
#   stage: publish
#   only:
#     - master
#   artifacts:
#     paths:
#       - badges/**
#   script:
#     - sh <(curl -sSL https://alshdavid.github.io/alshx/bin/alshx) --install
#     - alshx npm-version-bouncer ./src/react/package.json
#     - make
#     - cd src/router
#     - yarn test:cover
#     - yarn clean
#     - yarn build:prod
#     - echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > .npmrc
#     - npm publish
#     - mkdir -p badges
#     - export VERSION=$(node -e "console.log(require('./package.json').version)")
#     - wget -O badges/version.svg https://img.shields.io/badge/version-${VERSION}-blue.svg
#     - wget -O badges/size.svg https://img.shields.io/badge/size-6kb-green.svg
#     - cp ../../readme.md .
#     - cd ../../
#     - cp -r src/router/badges .

animate:
  image: node:lts
  stage: publish
  script:
    - sh deploy.sh ./src/animate

# transition:
#   image: node:lts
#   stage: publish
#   only:
#     - master
#   script:
#     - sh <(curl -sSL https://alshdavid.github.io/alshx/bin/alshx) --install
#     - alshx npm-version-bouncer ./src/react/package.json
#     - make
#     - cd src/transition
#     - yarn test:cover
#     - yarn clean
#     - yarn build:prod
#     - echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > .npmrc
#     - npm publish

# preact:
#   image: node:lts
#   stage: publish
#   only:
#     - master
#   script:
#     - sh <(curl -sSL https://alshdavid.github.io/alshx/bin/alshx) --install
#     - alshx npm-version-bouncer ./src/react/package.json
#     - make
#     - cd src/preact
#     - yarn test:cover
#     - yarn clean
#     - yarn build:prod
#     - echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > .npmrc
#     - npm publish

# react:
#   image: node:lts
#   stage: publish
#   only:
#     - master
#   script:
#     - sh <(curl -sSL https://alshdavid.github.io/alshx/bin/alshx) --install
#     - alshx npm-version-bouncer ./src/react/package.json
#     - make
#     - cd src/react
#     - yarn test:cover
#     - yarn clean
#     - yarn build:prod
#     - echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > .npmrc
#     - npm publish

# svelte:
#   image: node:lts
#   stage: publish
#   only:
#     - master
#   script:
#     - sh <(curl -sSL https://alshdavid.github.io/alshx/bin/alshx) --install
#     - alshx npm-version-bouncer ./src/react/package.json
#     - make
#     - cd src/svelte
#     - yarn test:cover
#     - yarn clean
#     - yarn build:prod
#     - echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > .npmrc
#     - npm publish

# vue:
#   image: node:lts
#   stage: publish
#   only:
#     - master
#   script:
#     - sh <(curl -sSL https://alshdavid.github.io/alshx/bin/alshx) --install
#     - alshx npm-version-bouncer ./src/react/package.json
#     - make
#     - cd src/vue
#     - yarn test:cover
#     - yarn clean
#     - yarn build:prod
#     - echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > .npmrc
#     - npm publish

# gendocs:
#   image: alshdavid/aws-cli
#   stage: gendocs
#   only:
#     - master
#   script:
#     - sh <(curl -sSL https://alshdavid.github.io/alshx/bin/alshx) --install
#     - aws s3 rm --recursive s3://alshdavid-public/crayon/badges
#     - aws s3 cp --recursive ./badges s3://alshdavid-public/crayon/badges
#     - aws cloudfront create-invalidation --distribution-id E2QHY39OWRUCEU --paths /\*
#     - alshx hub-purge https://github.com/alshdavid/crayon